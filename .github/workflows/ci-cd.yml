name: CI/CD Java + K3s via Tailscale Funnel

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/taskflow-api
  TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Construir com Maven
        run: mvn package -DskipTests

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configurar Buildx
        uses: docker/setup-buildx-action@v3

      - name: Construir e enviar imagem Docker (ARM64)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm/v7
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Conectar ao Tailscale
        id: tailscale
        uses: tailscale/github-action@v3
        with:
          authkey: ${{ env.TAILSCALE_AUTHKEY }}

      - name: Obter IP Tailscale do runner
        id: get-tailscale-ip
        run: |
          IP=$(tailscale status -json | jq -r '.Self.TailscaleIPs[0]')
          echo "TS_IP=$IP" >> "$GITHUB_ENV"

      - name: Criar pasta .kube
        run: mkdir -p $HOME/.kube

      - name: Configurar kubeconfig com IP Tailscale
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode \
            | sed "s|127.0.0.1:6443|${{ env.TS_IP }}:6443|g" \
            > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config

      - name: Verificar acesso ao cluster
        run: kubectl get nodes

      - name: Implantar no cluster K3s
        run: |
          kubectl apply -f k8s/secrets-taskflow.yaml
          kubectl apply -f k8s/deployment-taskflow.yaml
          kubectl apply -f k8s/service-taskflow.yaml

      - name: Reiniciar o deployment TaskFlow
        run: |
          kubectl rollout restart deployment taskflow-api -n taskflow
