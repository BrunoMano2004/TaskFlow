name: CI/CD Java + K3s via Tailscale Funnel

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/taskflow-api
  TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # Define TaskFlow como diretório de trabalho para todos os 'run:'
    defaults:
      run:
        shell: bash
        working-directory: k3s-apps/taskflow/TaskFlow   # :contentReference[oaicite:0]{index=0}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3                  # :contentReference[oaicite:1]{index=1}

      - name: Configurar JDK 17
        uses: actions/setup-java@v3                # :contentReference[oaicite:2]{index=2}
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Rodar testes unitários
        run: mvn test

      - name: Construir com Maven
        run: mvn package -DskipTests

      - name: Login no Docker Hub
        uses: docker/login-action@v2               # :contentReference[oaicite:3]{index=3}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir e enviar imagem Docker
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest .
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: Conectar ao Tailscale
        id: tailscale
        uses: tailscale/github-action@v3           # :contentReference[oaicite:4]{index=4}
        with:
          authkey: ${{ env.TAILSCALE_AUTHKEY }}

      - name: Obter IP Tailscale do runner
        id: get-ip
        run: |
          echo "TS_IP=$(tailscale status -json | jq -r '.Self.TailscaleIPs[0]')" >> $GITHUB_ENV

      - name: Criar pasta .kube
        run: mkdir -p $HOME/.kube

      - name: Configurar kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d \
            | sed "s|127.0.0.1|${{ env.TS_IP }}|g" \
            > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config

      - name: Verificar acesso ao cluster
        run: kubectl get nodes

      - name: Implantar no cluster K3s
        run: |
          kubectl apply -f k8s/deployment-taskflow.yaml
          kubectl apply -f k8s/service-taskflow.yaml
